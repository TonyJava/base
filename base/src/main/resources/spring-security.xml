<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
      http://www.springframework.org/schema/security/oauth2 
      http://www.springframework.org/schema/security/spring-security-oauth2.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />
	
	<security:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="oauth2AuthenticationManager"
		entry-point-ref="oauth2AuthenticationEntryPoint" use-expressions="false">
		<security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="oauth2AuthenticationEntryPoint" />

		<security:custom-filter ref="clientCredentialsTokenEndpointFilter"
			before="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="oauth2AccessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>

	<!--unity http configuration -->
	<security:http pattern="/unity/**" create-session="never"
		entry-point-ref="oauth2AuthenticationEntryPoint"
		access-decision-manager-ref="oauth2AccessDecisionManager"
		use-expressions="false">
		<security:anonymous enabled="false" />

		<security:intercept-url pattern="/unity/**" access="ROLE_UNITY,SCOPE_READ" />

		<security:custom-filter ref="unityResourceServer" before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="oauth2AccessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>

	<!--mobile http configuration -->
	<security:http pattern="/m/**" create-session="never"
		entry-point-ref="oauth2AuthenticationEntryPoint"
		access-decision-manager-ref="oauth2AccessDecisionManager"
		use-expressions="false">
		<security:anonymous enabled="false" />

		<security:intercept-url pattern="/m/**" access="ROLE_MOBILE,SCOPE_READ"
			method="POST" />

		<security:custom-filter ref="mobileResourceServer" before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="oauth2AccessDeniedHandler" />
		<security:csrf disabled="true" />
	</security:http>

	<beans:bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<beans:property name="authenticationManager" ref="oauth2AuthenticationManager" />
	</beans:bean>

	<!--unity resource server filter -->
	<oauth2:resource-server id="unityResourceServer"
		resource-id="unity-resource" token-services-ref="tokenServices" />

	<!--mobile resource server filter -->
	<oauth2:resource-server id="mobileResourceServer"
		resource-id="mobile-resource" token-services-ref="tokenServices" />

	<!--Config ClientDetailsService -->
	<!--<oauth2:client-details-service id="clientDetailsService"> -->

	<!--&lt;!&ndash;unity client&ndash;&gt; -->
	<!--<oauth2:client client-id="unity-client" resource-ids="unity-resource" -->
	<!--authorized-grant-types="password,authorization_code,refresh_token,implicit" -->
	<!--secret="unity" authorities="ROLE_UNITY" scope="read,write"/> -->

	<!--&lt;!&ndash;mobile client&ndash;&gt; -->
	<!--<oauth2:client client-id="mobile-client" resource-ids="mobile-resource" -->
	<!--authorized-grant-types="password,authorization_code,refresh_token,implicit" -->
	<!--secret="mobile" authorities="ROLE_MOBILE" scope="read,write"/> -->

	<!--</oauth2:client-details-service> -->

	<beans:bean id="clientDetailsService"
		class="org.springframework.security.oauth2.provider.client.JdbcClientDetailsService">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>


	<!--Config token services -->
	<!--<beans:bean id="tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/> -->
	<beans:bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.store.JdbcTokenStore">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>

	<beans:bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="clientDetailsService" ref="clientDetailsService" />
		<beans:property name="supportRefreshToken" value="true" />
	</beans:bean>

	<!--<global-method-security pre-post-annotations="enabled" proxy-target-class="true"> -->
	<!--<expression-handler ref="oauth2ExpressionHandler"/> -->
	<!--</global-method-security> -->

	<!--<oauth2:expression-handler id="oauth2ExpressionHandler"/> -->
	<!--<oauth2:web-expression-handler id="oauth2WebExpressionHandler"/> -->

	<beans:bean
		class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory"
		id="oAuth2RequestFactory">
		<beans:constructor-arg name="clientDetailsService"
			ref="clientDetailsService" />
	</beans:bean>


	<beans:bean id="oauthUserApprovalHandler" class="com.hzlh.oauth.OauthUserApprovalHandler">
		<beans:property name="tokenStore" ref="tokenStore" />
		<beans:property name="clientDetailsService" ref="clientDetailsService" />
		<beans:property name="requestFactory" ref="oAuth2RequestFactory" />
		<beans:property name="oauthService" ref="oauthService" />
	</beans:bean>


	<beans:bean id="jdbcAuthorizationCodeServices"
		class="org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices">
		<beans:constructor-arg index="0" ref="dataSource" />
	</beans:bean>


	<oauth2:authorization-server
		client-details-service-ref="clientDetailsService" token-services-ref="tokenServices"
		user-approval-handler-ref="oauthUserApprovalHandler"
		user-approval-page="oauth_approval" error-page="oauth_error">
		<oauth2:authorization-code
			authorization-code-services-ref="jdbcAuthorizationCodeServices" />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>


	<beans:bean id="oauth2AuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />


	<beans:bean id="oauth2ClientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="clientDetailsService" />
	</beans:bean>

	<security:authentication-manager id="oauth2AuthenticationManager">
		<security:authentication-provider user-service-ref="oauth2ClientDetailsUserService" />
	</security:authentication-manager>

	<beans:bean id="oauth2AccessDecisionManager"
		class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean
					class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean id="oauth2AccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<security:http disable-url-rewriting="true" use-expressions="false"
		authentication-manager-ref="authenticationManager">
		<security:intercept-url pattern="/oauth/**"
			access="ROLE_USER,ROLE_UNITY,ROLE_MOBILE" />
		<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<security:form-login authentication-failure-url="/login.jsp?authentication_error=1"
			default-target-url="/index.jsp" login-page="/login.jsp"
			login-processing-url="/login.do" />
		<security:logout logout-success-url="/index.jsp" logout-url="/logout.do" />
		<security:access-denied-handler error-page="/login.jsp?authorization_error=2" />
		<security:anonymous />
		<security:csrf disabled="true" />
	</security:http>


	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userService">
			<security:password-encoder hash="md5" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans:beans>